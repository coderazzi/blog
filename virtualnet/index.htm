<html>
<!-- Creation date: 12/04/2002 -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>VirtualNet: network simulation with JavaRMI. Overview</title>
<meta name="Description" content="VirtualNet">
<meta name="Keywords" content="java RMI network simulation">
<meta name="Author" content="Luis Pena">
<meta name="Generator" content="AceHTML 4 Pro">
</head>
<body>

<table width="95%" border="0">
    <tr>
      <td width="150" align="left" valign="top" bgcolor="#BBBBFF">
	  	<center><br>
	    <font color="#4444ff"><b>VirtualNet</b></font>		
		<table width="92%" border="1" align="center">
		    <tr><td bgcolor="#BBDDDD"><font size="-1"><center>
         		<hr size="1" color="#7777FF" width="95%">				
				<font color="#4444ff"><b>Overview</b></font><br>
         		<hr size="1" color="#7777FF" width="95%">				
				<a href="availability.htm">Availability</a><br>
				<a href="packages.htm">Packages</a><br>
				<a href="interface.htm">Interface</a><br>
				<a href="localExample.htm">Local example</a><br>
				<a href="rmiExample.htm">RMI example</a><br>
				<a href="executables.htm">Executables</a><br>
				<a href="versions.htm">Versions</a><br>
         		<hr size="1" color="#7777FF" width="95%">				
			</center></font></td></tr>
		</table>
				
		<hr size="1" color="#7777FF" width="80%">				
		<br>
    	<p><a href="../index.htm">Home</a></p>
    	<p><a href="../filesplit/index.htm">FileSplit</a></p>
    	<p><a href="../idldepend/index.htm">IDL depend</a></p>
    	<p><a href="../menu/index.htm">Menu Applet</a></p>
    	<p><a href="http://grasia.fdi.ucm.es/sensei">Sensei</a></p>
    	<p><a href="../splitimage/index.htm">SplitImage</a></p>
    	<p><a href="../virtualnet2/index.htm">VirtualNet 2</a></p>
		
		<hr size="1" color="#7777FF" width="60%">		
    	<a href="../humour.htm">humour</a>
		
		<hr size="1" color="#7777FF" width="80%">		
		<a href="mailto:java_lmp@yahoo.co.uk?subject=webpage"><font size="-1">java_lmp@yahoo.co.uk</font></a><br><br>
		<font size="-1"><b><i><font color="#4444ff">Last Updated:<br> 3rd September 2003</font></i></b></font>		
		<hr size="1" color="#7777FF" width="80%">		
	    </center>
	  </td>
		
      <td width="4">
	  </td>

	  
	  <td valign="top">
		<hr size="2" color="#663366" width="400">
        <center><font size="+3" color="#663366"><b><i>VirtualNet <font size="+1">(over RMI)</font></i></b></font></center>
		<hr size="2" color="#663366" width="300">
        <center><font size="+2" color="#663366"><b><i>Overview</i></b></font></center>
		<hr size="2" color="#663366" width="400">
	
		 <br>	
	     <table border="0"><tr><td>
		 <ul type="disc">
           <li><a href="#WhatIs">What is Virtual Net</a>
           <li><a href="#IsUseful">Is it useful?</a>
           <li><a href="#Philosophy">Its philosophy: how to work with Virtual Net</a>
           <li><a href="#CS">Client/Server application with Virtual Net</a>
           <li><a href="#TRMI">Transparency with RMI</a>
           <li><a href="#Example">An small example with RMI</a>
           <li><a href="#Compiler">The Virtual Net Compiler</a>
           <li><a href="#Graphics">Graphics</a>
         </ul></td><td width="50"></td><td><IMG SRC="top5.gif" align="right"></td></tr></table>		 
         
	     <table border="0"><tr><td width="5"></td><td>
           <a name="WhatIs"><b><i>What is Virtual Net</i></b></a>
           <hr width=50% align=left size=2>
           Virtual Net is an application that allows the user to make a simulation of a network topology, and to run and test Client/Server programs on this net.
           <br>
           <br>
           <br>
           <a name="IsUseful"><i><b>Is it useful?</b></i></a>
           <hr width=50% align=left size=2>
           Everybody can develop an RMI or CORBA Client/Server application and test it just on one machine, with the only difference of the access times; but, in this case, you can not just simulate network problems. This has been my main reason to develop this application, to be able to simulate network partitions.
           <br>
           <br>
           <br>
           <a name="Philosophy"><i><b>How to work with Virtual Net</b></i></a>
           <hr width=50% align=left size=2>
           In Virtual Net, the net is defined by the nodes (the machines) and the links (its communication channels) between them.<p>
           On a real net, the servers and the client are attached to the machine where its process is being executed; is that hosting relation which is needed to simulate under <EM>Virtual Net</EM>. Therefore, any server or client, before giving or requesting any service, first has to get attached to any of the nodes. From that moment, the communications between the server and its clients are done throught the virtual net, using its defined nodes and links.<p>
           <br>
           <a name="CS"><i><b>Client/Server applications with Virtual Net</b></i></a>
           <hr width=50% align=left size=2>
           On a client/server application, the server first has to be known; to do that, it has to register itself, and depending on the middleware, it can do it in very different ways. When it becomes registered, with a public name, any client could link to that server and therefore it could start making service requests.<p>
           To do this, there are three basic operations on Virtual Net:
           <ul type=square>
           <li><i>-Binding</i>: the server is binded with an unique name to a host
           <li><i>-Unbinding</i>: the server is unbinded from the host
           <li><i>-Lookup</i>: the client looks for a server with an specified name
           </ul>
           <p>By now, vnet only allows to develop local C/S applications, and, much more interesting, RMI C/S applications.</p>
		   <p><a href="../virtualnet2/index.htm">VirtualNet2</a> is a port of this application to cover the same functionality under CORBA. In fact, VirtualNet2 addresses
		   the problem under a different perspective and the result is much more effective.</p>
           <br>
           <a name="TRMI"><i><b>Transparency with RMI</b></i></a>
           <hr width=50% align=left size=2>
           There is an additional feature that makes very interesting the use of this virtual net with RMI: its transparency, the changes to make to your C/S application is truly very small.  You only have to think that any client or server first has to say in with node it is hosted. From that moment, no extra changes are needed.<br>
           Even the exceptions that can be thrown by Virtual Net have being mapped to the analogue RMI exceptions.
           <br>
           <br>
           <br>
           <a name="Example"><i><b>An small example with RMI</b></i></a>
           <hr width=50% align=left size=2>
           This is an small RMI program.<p>
           The interface:
           <font size="-1"><pre>public interface PhoneNumbersIntf extends java.rmi.Remote
           {
           	public String getNumber() throws java.rmi.RemoteException;
           }</pre></font>
           The implementation:
           <font size="-1"><pre>public class PhoneNumbersServer implements PhoneNumbersIntf
           {
           	public PhoneNumbersServer(String number) 
           	{
           		Number=number;
           	}
           	public String getNumber() throws java.rmi.RemoteException
           	{
           		return Number;
           	}
           	String Number;
           }</pre></font>
           <br>
           To use this server with Virtual Net, <i><b>no changes are needed</b></i>.
           <br>
           In RMI, the implementation has to be compiled with <i><b>rmic</b></i>, which generates the stub and skeleton for the server. In VNet, it is still needed to execute rmic; but it is needed also an stub for the vnet, that is generated automatically by the <i><b>virtual net compiler</b></i>.
           <br>
           The only difference between an RMI and an RMI vnet application, is that, in the latter, the servers and clients have to be attached first (using the Naming service) to a node in the net (that is, they reside on a machine). From that moment, they will use the attached Host -that has the same interface as the Naming service- to bind, unbind or lookup a server.
           <br>
           <br>
           <u>RMI:</u>
           <font size="-1"><pre>Naming.bind("LMP",new PhoneNumbersServer("763271"));
           PhoneNumbersIntf p=(PhoneNumbersIntf)Naming.lookup("LMP");</pre></font>
           <u>RMI Vnet:</u>
           <font size="-1"><pre>Host host=(Host) Naming.lookup("/TestA/HostY");
           host.bind("LMP",new PhoneNumbersServer("763271"));
           PhoneNumbersIntf p=(PhoneNumbersIntf)host.lookup("LMP");</pre></font>
           <br>
           <br>
           And that's all!!
           <br>
           <br>
           <br>
           <a name="Compiler"><i><b>The Virtual Net Compiler</b></i></a>
           <hr width=50% align=left size=2>
           To get the stub, I have developped a very simple compiler that makes this task automatic.<br>
           There is a compiler for the local version, that needs as the only argument the <i>class</i> of the server, and that generates a <i>java</i> file that has to be compiled. This file has the same name as the server, with the suffix <i>_VNet</i>.<br>
           In the remote version, a stub is not needed for the server, but for its RMI stub. The compiler still needs to have the server itself, but it generates the stub directly for the RMI stub; in this case, the suffix is <i>_Stub_VNet</i>
           <br>
           <br>
           <br>
           <a name="Graphics"><i><b>Graphics</b></i></a>
           <hr width=50% align=left size=2>
           To follow the net state, it is possible to open the following windows:
           <ul type=disc>
           <li>A console that shows all the events in the net.
           <li>A list of binded servers.
           <li>A graph representation. By now, there are two representations, one called net, and the another one, in circle. This representation even shows the messages passing, changing the colour of the affected nodes.
           </ul>
           <center><img src="net.jpg" alt="graph Net"></center>
           <br>
           <br>
           <hr width=100% align=center size=2>
		</td></tr></table>
	 </td>
    </tr>
</table>
</body>
</html>
